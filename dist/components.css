.btn {
  -webkit-tap-highlight-color: transparent;
  display: inline-flex;
  height: 2.5rem;
  flex-shrink: 0;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  overflow: hidden;
  border-radius: 2.5rem;
  border-style: none;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

  .btn svg {
  fill: currentColor;
}

  .btn.icon-left {
  padding-left: 1rem;
}

  .btn.icon-left>svg {
  height: 18x;
  width: 18px;
}

  .btn.icon-full {
  width: 2.5rem;
  padding: 0px;
}

  .btn.icon-full>svg {
  width: 1.5rem;
}

  .btn:disabled {
    --tw-bg-opacity: 0.12;
    --tw-text-opacity: 0.38;
    background-color: rgb(var(--color-primary) / var(--tw-bg-opacity));
    color: rgb(var(--color-on-primary) / var(--tw-text-opacity));
    cursor: auto;
  }

  .btn-outlined {
  background-color: transparent;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: rgb(var(--color-on-surface) / 0.1);
}

  @media (hover: hover) {
      .btn .btn-filled:hover {
        --tw-bg-opacity: 0.7;
      }

      .btn .btn-outlined:hover {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  }
  }

.btn:not(:disabled).btn-filled {
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    background-color: rgb(var(--color-primary) / var(--tw-bg-opacity));
    color: rgb(var(--color-on-primary) / var(--tw-text-opacity));
  }

.btn:not(:disabled).btn-outlined {
  color: rgb(var(--color-on-primary));
  --tw-ring-color: rgb(var(--color-outline));
}.fab {
  print-color-adjust: exact;
  -webkit-print-color-adjust: exact;
  -webkit-tap-highlight-color: transparent;
  position: relative;
  display: inline-flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-style: none;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

  .fab:focus-visible .layer,
  .fab:active .layer {
  opacity: 0.12;
}

  .fab-small {
  height: 2.5rem;
  gap: 0.5rem;
  border-radius: 0.5rem;
  padding: 0.5rem;
}

  .fab-normal {
  height: 3.5rem;
  gap: 0.75rem;
  border-radius: 1rem;
  padding: 1rem;
}

  .fab-large {
  height: 6rem;
  gap: 1.875rem;
  border-radius: 1.875rem;
  padding: 1.875rem;
}

  .fab-small > svg, .fab-normal > svg {
  height: 1.5rem;
  width: 1.5rem;
}

  .fab-large > svg {
  height: 2.5rem;
  width: 2.5rem;
}

.layer {
  position: absolute;
  inset: 0px;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

@media (hover: hover) {
  button:hover .layer {
    opacity: 0.08;
  }
}
.card {
  background-color: rgb(var(--color-surface));
  color: rgb(var(--color-on-surface));
  display: flex;
  flex-direction: column;
  overflow: hidden;
  border-radius: 0.75rem;
  border-style: none;
  padding: 1rem;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

  .card-outlined {
    border: solid 1px rgb(var(--color-outline));
  }

  .card-filled {
    background-color: rgb(var(--color-surface-variant));
  }

  .card:is(button, a) {
    text-align: inherit;
    font: inherit;
    -webkit-tap-highlight-color: transparent;
    cursor: pointer;
  }

@media print, (force-colors: active) {
  .card-filled {
    outline: solid 2px;
  }
}
.divider {
  margin: 0px;
  height: 0px;
  border-style: none;
  border-bottom: solid 1px currentColor
}

  .divider-middle {
  margin-left: 1rem;
  margin-right: 1rem
}

  .divider-right {
  margin-right: 1rem
}

  .divider-list-inset {
  margin-left: 1rem;
  margin-right: 1.5rem
}

  .divider.vertical-space {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem
}
.list {
      display: flex;
      flex-direction: column;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
}

  .list > .item {
      display: flex;
      gap: 0.25rem;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      padding-left: 1.5rem;
      padding-right: 1rem;
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 200ms;
}

  .list > .item:is(button, label):is(:focus-visible, :active) {
      background-color: rgb(var(--color-on-surface) / 0.12);
    }

  .list > .item > .avatar {
      height: 2.5rem;
      width: 2.5rem;
      align-self: center;
      border-radius: 2.5rem;
}

  .list > .item-body {
      margin-top: auto;
      margin-bottom: auto;
      margin-left: 0px;
      margin-right: 0px;
      display: flex;
      flex: 1 1 0%;
      flex-direction: column;
      overflow: hidden;
}

  .list-lines-1 {
      height: 3.5rem;
}

  .list-lines-2 {
      height: 4.5rem;
}

  .list-lines-3 {
      height: 5.5rem;
      padding-top: 0.75rem;
      padding-bottom: 0.75rem;
}

  .list-lines-3 svg {
      align-self: flex-start;
}

  .list .item:is(button) {
      margin: 0px;
      border-style: none;
      background-color: transparent;
      text-align: left;
}

  .list :is(.list-item, .trailing-icon) > svg {
    color: rgb(var(--color-on-surface-variant));
    height: 1.5rem;
    width: 1.5rem;
    align-self: center;
  }

  .list > .trailing-icon {
    color: rgb(var(--color-on-surface-variant));
    display: inline-flex;
    align-self: center;
  }

  .list-headline {
    color: rgb(var(--color-on-surface));
  }

  .list-description {
    color: rgb(var(--color-on-surface-variant));
  }

  .list :is(.list-lines-1, .list-lines-2) :is(.list-headline, .list-description) {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }

li {
  display: flex;
}

@media (hover: hover) {
  .list-item:is(button, label):hover {
    background-color: rgb(var(--color-on-surface) / 0.12);
  }
}
.checkbox-container {
            position: relative;
            display: inline-flex;
}

        .checkbox-container svg {
            color: rgb(var(--color-on-primary));
            height: 100%;
            width: 100%;
        }

        .checkbox-container svg path {
                stroke-dasharray: 20.874 20.874;
                opacity: 0;
                transition-property: all;
                transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
                transition-duration: 200ms;
            }
    .checkbox-layer,
    .checkbox-container svg {
            position: absolute;
            left: 50%;
            top: 50%;
            --tw-translate-x: -50%;
            --tw-translate-y: -50%;
            transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
            transition-property: all;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 200ms;
}
    .checkbox-input {
        --color: var(--color-on-surface-variant);
        margin: 0px;
        height: 1.125rem;
        width: 1.125rem;
        -webkit-appearance: none;
           -moz-appearance: none;
                appearance: none;

    }
    .checkbox-input::before {
            content: " ";
            background-clip: content-box;
            border: solid .125rem rgb(var(--color));
            display: inline-block;
            height: 1.125rem;
            width: 1.125rem;
            border-radius: 0.125rem;
            transition-property: all;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 200ms;
        }
    .checkbox-input:focus-visible {
            --color: var(--color-on-surface);
        }
    .checkbox-input:checked::before {
            background-color: rgb(var(--color));
        }
    .checkbox-input:checked+svg>path {
            animation: check 400ms;
            opacity: 1;
        }
    .checkbox-input:disabled::before {
            color: rgb(var(--color-on-surface) / 0.38);
        }
    .checkbox-input:disabled+svg {
            color: rgb(var(--color-on-surface));
        }
    .checkbox-layer {
        --color: var(--color-on-surface-variant);
        -webkit-tap-highlight-color: transparent;
        height: 2.5rem;
        width: 2.5rem;
        cursor: pointer;
        border-radius: 3rem;
    }
    .checkbox-input:active~.checkbox-layer,
    .checkbox-input:focus-visible~.checkbox-layer {
        background-color: rgb(var(--color) / .12);
    }
    .checkbox-input:checked::before,
    .checkbox-input:checked~.checkbox-layer {
        --color: var(--color-primary);
    }
    .checkbox-input:disabled~.checkbox-layer {
        display: none;
    }
    @keyframes check {
        0% {
            stroke-dashoffset: 20.874;
        }

        100% {
            stroke-dashoffset: 0;
        }
    }

@media(hover:hover) {
    .checkbox-input:hover {
        --color: var(--color-on-surface);
    }

        .checkbox-input:hover ~.checkbox-layer {
            --color: var(--color-on-surface);
            background-color: rgb(var(--color) / 0.08);
        }
}.chips {
  background-color: rbg(var(--color-surface));
  color: rgb(var(--color-on-surface-variant));
  border: solid 1px rgb(var(--color-outline));
  position: relative;
  display: inline-flex;
  height: 2rem;
  overflow: hidden;
  border-radius: 0.5rem;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

  .chips svg {
  height: 18px;
  width: 18px;
}

  .chips button {
    -webkit-tap-highlight-color: transparent;
    position: relative;
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    border-style: none;
    background-color: transparent;
    color: inherit;
  }

  .chips button:disabled {
      cursor: auto;
    }

  .chips-layer {
  position: absolute;
  inset: 0px;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

  .chips-content {
  gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

  .chips-selected {
    background-color: rgb(var(--color-secondary-container));
    color: rgb(var(--color-on-secondary-container));
    border-color: transparent;
  }

  .chips-disabled {
    box-shadow: none;
    border-color: rgb(var(--color-on-surface) / 0.12);
    color: rgb(var(--color-on-surface) / 0.38);
  }

  .chips-assist {
    color: rgb(var(--color-on-surface));
  }

  .chips-assist :not(.chips-disabled) svg {
      color: rgb(var(--color-primary));
    }

  .chips-input .chips-content {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

@media (hover: hover) {
  .chips-selected:hover:not(.chips-disabled) {
    box-shadow: var(--m3-util-elevation-1);
  }
}
.radio-container {
    position: relative;
    margin-right: 0.5rem;
    display: flex;
    align-items: center;
}
  .radio-group.row {
    display: inline-flex;
}
  .radio-input {
    --tw-border-opacity: 1;
    border-color: rgb(var(--color-primary) / var(--tw-border-opacity));
    margin: 0.25rem;
    display: inline-block;
    height: 1.25rem;
    width: 1.25rem;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: 9999px;
    border-width: 2px;
    padding: 0.5rem;
  }
  .radio-input:checked {
      content: "";
      background-clip: content-box;
      animation: dilatedRadio 350ms cubic-bezier(0.254, 0.029, 0, 1.2);
      height: 1.25rem;
      width: 1.25rem;
      border-radius: 9999px;
      padding: 0.18rem;
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
  .radio-input-primary {
      --tw-border-opacity: 1;
      border-color: rgb(var(--color-primary) / var(--tw-border-opacity));
    }
  .radio-input-primary:checked {
        border-color: rgb(var(--color-primary));
        background-color: rgb(var(--color-primary));
      }
  .radio-input-secondary {
      --tw-border-opacity: 1;
      border-color: rgb(var(--color-secondary) / var(--tw-border-opacity));
      background-color: transparent;
    }
  .radio-input-secondary:checked {
        border-color: rgb(var(--color-on-primary));
        background-color: rgb(var(--color-on-primary));
      }

@keyframes dilatedRadio {
  10% {
    padding: 0.5rem;
  }

  50% {
    padding: 0.09rem;
  }

  100% {
    padding: 0.18rem;
  }
}